# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

version: '2.1'

services:

  shell:
    image: tnt-shell
    container_name: tnt-shell
    build:
      context: ../grid-contrib/track_and_trace/
      dockerfile: shell/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ../grid-contrib/track_and_trace/:/track_and_trace
      - /track_and_trace/asset_client/node_modules
      - /track_and_trace/fish_client/node_modules
      - /track_and_trace/server/node_modules
    depends_on:
      - rethink
      - rest-api
    environment:
      - VALIDATOR_URL=tcp://validator:4004
      - DB_HOST=rethink
      - SERVER=http://server:3000
      - GRID=http://gridd:8080
      - 'http_proxy=${http_proxy}'
      - 'https_proxy=${https_proxy}'
      - 'no_proxy=rest-api,server,eth0,validator,${no_proxy}'
    command: |
      bash -c "
        cd asset_client/ && npm run build && cd - &&
        cd fish_client/ && npm run build && cd - &&
        if [ ! -f /root/.sawtooth/keys/root.priv ]; then
          sawtooth keygen &&
          cd server/ &&
          npm run init &&
          cd -
        fi;
        cd asset_client/ && npm run seed-schema && cd - &&
        tail -f /dev/null
      "

  server:
    image: tnt-server
    container_name: tnt-server
    build:
      context: ../grid-contrib/track_and_trace/
      dockerfile: server/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ../grid-contrib/track_and_trace/:/track_and_trace
      - /track_and_trace/server/node_modules
    expose:
      - 3000
    ports:
      - '8020:3000'
    depends_on:
      - validator
      - rethink
      - shell
    environment:
      - VALIDATOR_URL=tcp://validator:4004
      - DB_HOST=rethink
      - 'http_proxy=${http_proxy}'
      - 'https_proxy=${https_proxy}'
      - 'no_proxy=rest-api,server,eth0,validator,${no_proxy}'
    entrypoint: node index.js

  ledger-sync:
    image: tnt-ledger-sync
    container_name: tnt-ledger-sync
    build:
      context: ../grid-contrib/track_and_trace/
      dockerfile: ledger_sync/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ../grid-contrib/track_and_trace/:/track_and_trace
      - /track_and_trace/ledger_sync/node_modules
    depends_on:
      - validator
      - rethink
    environment:
      - VALIDATOR_URL=tcp://validator:4004
      - DB_HOST=rethink
      - 'http_proxy=${http_proxy}'
      - 'https_proxy=${https_proxy}'
      - 'no_proxy=rest-api,server,eth0,validator,${no_proxy}'

  asset-client:
    image: tnt-asset-client
    container_name: tnt-asset-client
    build:
      context: ../grid-contrib/track_and_trace/
      dockerfile: ./asset_client/Dockerfile
    volumes:
      - ../grid-contrib/track_and_trace/asset_client/public/:/usr/local/apache2/htdocs/
    expose:
      - 80
    ports:
      - '8021:80'
    depends_on:
      - server
      - rest-api
      - gridd

  fish-client:
    image: tnt-fish-client
    container_name: tnt-fish-client
    build:
      context: ../grid-contrib/track_and_trace/
      dockerfile: ./fish_client/Dockerfile
    volumes:
      - ../grid-contrib/track_and_trace/fish_client/public/:/usr/local/apache2/htdocs/
    expose:
      - 80
    ports:
      - '8022:80'
    depends_on:
      - server

  rethink:
    image: rethinkdb
    container_name: tnt-rethink
    expose:
      - 8080
      - 28015
    ports:
      - '8023:8080'
      - '28020:28015'
    environment:
      - 'http_proxy=${http_proxy}'
      - 'https_proxy=${https_proxy}'
      - 'no_proxy=rest-api,server,eth0,validator,${no_proxy}'
